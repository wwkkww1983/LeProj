@model ZdflCount.Models.ScheduleOrder

@{
    ViewBag.Title = "修改施工单";
    ViewBag.colon="：";
}

<h2>@ViewBag.Title</h2>

@Html.Partial("_OrderCountPartial")

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>施工单信息</legend>

        @Html.HiddenFor(model => model.Schedules.ID)
        @Html.Hidden("Schedules.OrderId", Model.Orders.OrderId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Schedules.DateCreate)           
        </div>
        <div class="editor-field">
            ：@Html.DisplayFor(model => model.Schedules.DateCreate)
        </div>
        <div class="editor-label">
             @Html.DisplayNameFor(model => model.Schedules.Number)
        </div>
        <div class="editor-field">
            ：@Html.DisplayFor(model => model.Schedules.Number)
        </div>
        <div class="editor-label">
             @Html.LabelFor(model => model.Schedules.Status)
        </div>
        <div class="editor-field">
            ： @Html.DisplayEnumDescription("Models.enumStatus",(int)@Model.Schedules.Status)
        </div>
        <div class="editor-label">
             @Html.DisplayNameFor(model => model.Schedules.MachineName)
        </div>
        <div class="editor-field">
           ：@Html.DropDownList("machine", @Model.MachineList)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Schedules.LastUpdatePersonName)
        </div>        
        <div class="editor-field">        
            ：@Html.DisplayFor(model => model.Schedules.LastUpdatePersonName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Schedules.ProductCount)
        </div>
        <div class="editor-field">
            @if(@Model.Schedules.Status == ZdflCount.Models.enumStatus.Temporary){
                @Html.EditorFor(model => model.Schedules.ProductCount);
                @Html.ValidationMessageFor(model => model.Schedules.ProductCount);
            }else{
                @ViewBag.colon;
                @Html.DisplayFor(model => model.Schedules.ProductCount);
            }
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Schedules.FinishCount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Schedules.FinishCount)
            @Html.ValidationMessageFor(model => model.Schedules.FinishCount)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Schedules.DetailInfo)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Schedules.DetailInfo, new { rows = "8", style = "width:99%" })
        </div>        

        <div class="editor-label">
            @Html.LabelFor(model => model.Schedules.NoticeInfo)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Schedules.NoticeInfo, new { rows = "8", style = "width:99%" })
        </div>

        <p>
            <input type="submit" value="保存修改" />
        </p>
    </fieldset>
}

<div class="left-outof-table">
    @Html.ActionLink("返回施工单列表", "Index",  new {id = Model.Orders.OrderId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
